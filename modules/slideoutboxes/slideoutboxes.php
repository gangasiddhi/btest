<?phpclass SlideOutBoxes extends Module{	/** @var max image size */ 	function __construct() 	{ 	 	$this->name = 'slideoutboxes';		$this->tab = 'front_office_features'; 	 	$this->version = '1.4';		/* The parent construct is required for translations */	 	parent::__construct();		$this->page = basename(__FILE__, '.php');	 	$this->displayName = $this->l('Slide Out Boxes');	 	$this->description = $this->l('These boxes stick out from the edges of browser windows. In showroom and product pages'); 	}    function install()    {        if (!parent::install() OR !$this->registerHook('footerTop') OR !$this->registerHook('header'))            return false;        return true;    }		public function uninstall() 	{		return (parent::uninstall());	}	function hookFooterTop($params) 	{		global $cookie;		if( $cookie->isLogged() AND			(strpos($_SERVER['PHP_SELF'], 'showroom') !== false OR 			strpos($_SERVER['PHP_SELF'], 'celebrity') !== false OR			strpos($_SERVER['PHP_SELF'], 'lookbook') !== false OR			strpos($_SERVER['PHP_SELF'], 'product') !== false) )		{			global $smarty;			$stylistIds = Attachment::listStylistIds();			$rand_key = array_rand($stylistIds, 1);			$stylist =  Attachment::getStylist($cookie->id_lang, $stylistIds[$rand_key]);			$smarty->assign(array(				'stylist' => $stylist,				'this_path' => $this->_path			));			return $this->display(__FILE__, 'slideoutboxes.tpl');		}		return false; 	}	public function hookHeader($params)	{		global $cookie;		if( $cookie->isLogged() AND			(strpos($_SERVER['PHP_SELF'], 'showroom') !== false OR			strpos($_SERVER['PHP_SELF'], 'celebrity') !== false OR			strpos($_SERVER['PHP_SELF'], 'lookbook') !== false OR			strpos($_SERVER['PHP_SELF'], 'product') !== false) )		{			Tools::addJS($this->_path.'assets/slideout.js');			Tools::addCSS($this->_path.'assets/slideout.css', 'all');		}	}}?>